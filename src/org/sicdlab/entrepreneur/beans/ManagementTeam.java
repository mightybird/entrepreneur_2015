package org.sicdlab.entrepreneur.beans;
// Generated 2015-8-5 16:28:47 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ManagementTeam generated by hbm2java
 */
@Entity
@Table(name = "management_team", catalog = "entrepreneur_2015")
public class ManagementTeam implements java.io.Serializable {

	private String managementTeamId;
	private ManagementRisk managementRisk;
	private TeamCoreCompetence teamCoreCompetence;
	private String comment;
	private float leaderQualityScore;
	private float totalScore;
	private Set projectIndexes = new HashSet(0);

	public ManagementTeam() {
	}

	public ManagementTeam(String managementTeamId, ManagementRisk managementRisk, TeamCoreCompetence teamCoreCompetence, float leaderQualityScore, float totalScore) {
		this.managementTeamId = managementTeamId;
		this.managementRisk = managementRisk;
		this.teamCoreCompetence = teamCoreCompetence;
		this.leaderQualityScore = leaderQualityScore;
		this.totalScore = totalScore;
	}

	public ManagementTeam(String managementTeamId, ManagementRisk managementRisk, TeamCoreCompetence teamCoreCompetence, String comment, float leaderQualityScore,
			float totalScore, Set projectIndexes) {
		this.managementTeamId = managementTeamId;
		this.managementRisk = managementRisk;
		this.teamCoreCompetence = teamCoreCompetence;
		this.comment = comment;
		this.leaderQualityScore = leaderQualityScore;
		this.totalScore = totalScore;
		this.projectIndexes = projectIndexes;
	}

	@Id

	@Column(name = "MANAGEMENT_TEAM_ID", unique = true, nullable = false, length = 32)
	public String getManagementTeamId() {
		return this.managementTeamId;
	}

	public void setManagementTeamId(String managementTeamId) {
		this.managementTeamId = managementTeamId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MANAGEMENT_RISK_ID", nullable = false)
	public ManagementRisk getManagementRisk() {
		return this.managementRisk;
	}

	public void setManagementRisk(ManagementRisk managementRisk) {
		this.managementRisk = managementRisk;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CORE_COMPETENCE_ID", nullable = false)
	public TeamCoreCompetence getTeamCoreCompetence() {
		return this.teamCoreCompetence;
	}

	public void setTeamCoreCompetence(TeamCoreCompetence teamCoreCompetence) {
		this.teamCoreCompetence = teamCoreCompetence;
	}

	@Column(name = "COMMENT", length = 65535)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "LEADER_QUALITY_SCORE", nullable = false, precision = 10)
	public float getLeaderQualityScore() {
		return this.leaderQualityScore;
	}

	public void setLeaderQualityScore(float leaderQualityScore) {
		this.leaderQualityScore = leaderQualityScore;
	}

	@Column(name = "TOTAL_SCORE", nullable = false, precision = 10)
	public float getTotalScore() {
		return this.totalScore;
	}

	public void setTotalScore(float totalScore) {
		this.totalScore = totalScore;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "managementTeam")
	public Set getProjectIndexes() {
		return this.projectIndexes;
	}

	public void setProjectIndexes(Set projectIndexes) {
		this.projectIndexes = projectIndexes;
	}

}
