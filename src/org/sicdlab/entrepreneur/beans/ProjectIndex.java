package org.sicdlab.entrepreneur.beans;
// Generated 2015-8-5 16:28:47 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProjectIndex generated by hbm2java
 */
@Entity
@Table(name = "project_index", catalog = "entrepreneur_2015")
public class ProjectIndex implements java.io.Serializable {

	private String projectIndexId;
	private EnvironmentFactor environmentFactor;
	private FinanceFactor financeFactor;
	private ManagementTeam managementTeam;
	private MarketAssessFactor marketAssessFactor;
	private ProductTechnologyFactor productTechnologyFactor;
	private Project project;
	private String createType;
	private String tutorId;
	private String comment;
	private float totalScore;
	private Date questionnaireTime;
	private Set projectTutors = new HashSet(0);

	public ProjectIndex() {
	}

	public ProjectIndex(String projectIndexId, EnvironmentFactor environmentFactor, FinanceFactor financeFactor, ManagementTeam managementTeam,
			MarketAssessFactor marketAssessFactor, ProductTechnologyFactor productTechnologyFactor, Project project, String createType, float totalScore,
			Date questionnaireTime) {
		this.projectIndexId = projectIndexId;
		this.environmentFactor = environmentFactor;
		this.financeFactor = financeFactor;
		this.managementTeam = managementTeam;
		this.marketAssessFactor = marketAssessFactor;
		this.productTechnologyFactor = productTechnologyFactor;
		this.project = project;
		this.createType = createType;
		this.totalScore = totalScore;
		this.questionnaireTime = questionnaireTime;
	}

	public ProjectIndex(String projectIndexId, EnvironmentFactor environmentFactor, FinanceFactor financeFactor, ManagementTeam managementTeam,
			MarketAssessFactor marketAssessFactor, ProductTechnologyFactor productTechnologyFactor, Project project, String createType, String tutorId, String comment,
			float totalScore, Date questionnaireTime, Set projectTutors) {
		this.projectIndexId = projectIndexId;
		this.environmentFactor = environmentFactor;
		this.financeFactor = financeFactor;
		this.managementTeam = managementTeam;
		this.marketAssessFactor = marketAssessFactor;
		this.productTechnologyFactor = productTechnologyFactor;
		this.project = project;
		this.createType = createType;
		this.tutorId = tutorId;
		this.comment = comment;
		this.totalScore = totalScore;
		this.questionnaireTime = questionnaireTime;
		this.projectTutors = projectTutors;
	}

	@Id

	@Column(name = "PROJECT_INDEX_ID", unique = true, nullable = false, length = 32)
	public String getProjectIndexId() {
		return this.projectIndexId;
	}

	public void setProjectIndexId(String projectIndexId) {
		this.projectIndexId = projectIndexId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ENVIRONMENT_FACTOR_ID", nullable = false)
	public EnvironmentFactor getEnvironmentFactor() {
		return this.environmentFactor;
	}

	public void setEnvironmentFactor(EnvironmentFactor environmentFactor) {
		this.environmentFactor = environmentFactor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FINANCE_FACTOR_ID", nullable = false)
	public FinanceFactor getFinanceFactor() {
		return this.financeFactor;
	}

	public void setFinanceFactor(FinanceFactor financeFactor) {
		this.financeFactor = financeFactor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MANAGEMENT_TEAM_ID", nullable = false)
	public ManagementTeam getManagementTeam() {
		return this.managementTeam;
	}

	public void setManagementTeam(ManagementTeam managementTeam) {
		this.managementTeam = managementTeam;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MARKET_ASSESS_FACTOR_ID", nullable = false)
	public MarketAssessFactor getMarketAssessFactor() {
		return this.marketAssessFactor;
	}

	public void setMarketAssessFactor(MarketAssessFactor marketAssessFactor) {
		this.marketAssessFactor = marketAssessFactor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCT_TECHNOLOGY_ID", nullable = false)
	public ProductTechnologyFactor getProductTechnologyFactor() {
		return this.productTechnologyFactor;
	}

	public void setProductTechnologyFactor(ProductTechnologyFactor productTechnologyFactor) {
		this.productTechnologyFactor = productTechnologyFactor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROJECT_ID", nullable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@Column(name = "CREATE_TYPE", nullable = false, length = 50)
	public String getCreateType() {
		return this.createType;
	}

	public void setCreateType(String createType) {
		this.createType = createType;
	}

	@Column(name = "TUTOR_ID", length = 32)
	public String getTutorId() {
		return this.tutorId;
	}

	public void setTutorId(String tutorId) {
		this.tutorId = tutorId;
	}

	@Column(name = "COMMENT", length = 65535)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "TOTAL_SCORE", nullable = false, precision = 12, scale = 0)
	public float getTotalScore() {
		return this.totalScore;
	}

	public void setTotalScore(float totalScore) {
		this.totalScore = totalScore;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "QUESTIONNAIRE_TIME", nullable = false, length = 19)
	public Date getQuestionnaireTime() {
		return this.questionnaireTime;
	}

	public void setQuestionnaireTime(Date questionnaireTime) {
		this.questionnaireTime = questionnaireTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectIndex")
	public Set getProjectTutors() {
		return this.projectTutors;
	}

	public void setProjectTutors(Set projectTutors) {
		this.projectTutors = projectTutors;
	}

}
